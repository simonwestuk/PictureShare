@using Microsoft.AspNetCore.Identity
@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

        <li class="nav-item mx-2">
            <a asp-controller="Pictures" asp-action="Create" class="btn btn-outline-light"><i class="bi bi-card-image"></i> Upload Image</a>
        </li>

        <li class="nav-item mx-2">
            <a asp-controller="Pictures" asp-action="Index" class="btn btn-outline-light"><i class="bi bi-card-image"></i> Manage Images</a>
        </li>


        <li class="nav-item mx-2">
            <a class="btn btn-outline-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="bi bi-person"></i> Manage Account</a>
        </li>


        <li class="nav-item mx-2">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-outline-light"> <i class="bi bi-box-arrow-left"></i> Logout, @User.Identity.Name</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item mx-2">
            <a class="btn btn-outline-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item mx-2">
            <a class="btn btn-outline-light" asp-controller="Home" asp-action="Login">Login</a>
        </li>
    }
</ul>
